
@book{van_deursen_dependency_2019,
	abstract = {Dependency Injection Principles, Practices, and Patterns is a revised and expanded edition of the bestselling classic Dependency Injection in .NET. It teaches you DI from the ground up, featuring relevant examples, patterns, and anti-patterns for creating loosely coupled, well-structured applications. The well-annotated code and diagrams use C# examples to illustrate principles that work flawlessly with modern object-oriented languages and DI libraries.},
	urldate = {2022-10-31},
	url = {https://learning.oreilly.com/library/view/dependency-injection-principles/9781617294730/},
    author = {Mark Seemann and Steven van Deursen},
    isbn = {9781617294730},
    publisher = {Manning Publications},
    title = {Dependency injection principles, practices, and patterns},
    year = {2019},
}

@article{ding_mvc_2012,
	title = {{MVC} pattern based on {Java}},
	volume = {198-199},
	issn = {1662-7482},
	url = {https://www.scientific.net/AMM.198-199.537},
	doi = {10.4028/www.scientific.net/AMM.198-199.537},
	abstract = {With development of software scale, programmer has been noticed the importance of design pattern. Each pattern has different realization in different platform. As the object-oriented technique develops, application of MVC pattern has been widely used. MVC pattern doesn’t only used in component construction, but also it used in large-scale object-oriented system design, such as e-commerce system. This paper discusses application of MVC on JAVA platform, and analysis advantages and disadvantages of MVC and MVC2.},
	urldate = {2022-11-01},
	journal = {Applied Mechanics and Materials},
	author = {Ding, Yue Hua and Liu, Chang Hua and Tang, Yu Xin},
	month = sep,
	year = {2012},
	pages = {537--541},
}

@incollection{sarcar_mvc_2020,
	address = {Berkeley, CA},
	title = {{MVC} pattern},
	isbn = {9781484260623},
	url = {https://doi.org/10.1007/978-1-4842-6062-3_26},
	abstract = {This chapter covers the MVC pattern.},
	language = {en},
	urldate = {2022-11-01},
	booktitle = {Design {Patterns} in {C}\#: {A} {Hands}-on {Guide} with {Real}-world {Examples}},
	publisher = {Apress},
	author = {Sarcar, Vaskaran},
	editor = {Sarcar, Vaskaran},
	year = {2020},
	doi = {10.1007/978-1-4842-6062-3_26},
	pages = {495--519},
}

@book{microsoft_razor_2022,
	title = {Razor pages unit tests in {ASP}.{Net} core},
	url = {https://learn.microsoft.com/en-us/aspnet/core/test/razor-pages-tests},
	abstract = {Learn how to create unit tests for Razor Pages apps.},
	language = {en-us},
	urldate = {2022-11-01},
	author = {{Microsoft}},
	year = {2022},
}

@book{microsoft_testing_2022,
	title = {Testing without your production database system},
	url = {https://learn.microsoft.com/en-us/ef/core/testing/testing-without-the-database},
	abstract = {Techniques for testing EF Core applications without involving  your production database system},
	language = {en-us},
	urldate = {2022-11-01},
	author = {{Microsoft}},
	year = {2022},
}

@book{anderson_get_2022,
	title = {Get started with {ASP}.{Net} core {MVC}},
	url = {https://learn.microsoft.com/en-us/aspnet/core/tutorials/first-mvc-app/start-mvc},
	abstract = {Learn how to get started with ASP.NET Core MVC.},
	language = {en-us},
	urldate = {2022-11-01},
	author = {Anderson, Rick},
	year = {2022},
}

@book{anderson_tutorial:_2022,
	title = {Tutorial: create a razor pages web app with {ASP}.{Net} core},
	shorttitle = {Tutorial},
	url = {https://learn.microsoft.com/en-us/aspnet/core/tutorials/razor-pages/},
	abstract = {This series of tutorials explains the basics of building a Razor Pages web app.},
	language = {en-us},
	urldate = {2022-11-01},
	author = {Anderson, Rick},
	year = {2022},
}

@book{ragupathi_how_2019,
	title = {How web works \& {ASP}.{Net} {MVC} fits into web application development},
	url = {https://www.dotnetodyssey.com/asp-net-mvc-5-free-course/how-web-works-asp-net-mvc-fits-web-application-development/},
	abstract = {Sidenote : This is the part 1 of the ASP.Net MVC course series.  You can get all the parts of this tutorial here. How Web Works All web applications use HTTP protocol (or its secured version HTTPS) to send data to the server and receive data from the server. This is true for all web applications whether it’s built using ... Read More},
	language = {en-US},
	urldate = {2022-11-02},
	author = {Ragupathi, Mugilan},
	year = {2019},
}